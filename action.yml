name: "Build Flipper Application Package"
author: "Oleksii Kutuzov"
description: "Github Action that builds your fap with ufbt"
branding:
  icon: "cpu"
  color: "orange"
inputs:
  path:
    description: "Path to fap source code (if not in the root of repository)"
    required: false
    default: ""
  lint_only:
    description: "Whether you want to only lint your source code"
    required: false
    default: "false"
  channel:
    description: "SDK channel to use"
    required: false
    default: "dev"
runs:
  using: "composite"
  steps:
    - name: Set fap source path
      shell: bash
      run: >
        if [ -z ${{ inputs.path }} ]; then
          echo "FAP_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
        else
          echo "FAP_PATH=$GITHUB_WORKSPACE/${{ inputs.path }}" >> $GITHUB_ENV
        fi

    - name: Get ufbt
      shell: bash
      run: >
        git clone --depth 1 --branch v0.1.0 https://github.com/flipperdevices/flipperzero-ufbt ${{ runner.temp }}/flipperzero-ufbt;
        echo "${{ runner.temp }}/flipperzero-ufbt" >> $GITHUB_PATH

    - name: Set channel
      shell: bash
      run: >
        if [ ${{ inputs.channel }} = 'dev' ]; then
          echo "CHANNEL=0" >> $GITHUB_ENV
        elif [ ${{ inputs.channel }} = 'rc' ]; then
          echo "CHANNEL=1" >> $GITHUB_ENV
        elif [ ${{ inputs.channel }} = 'release' ]; then
          echo "CHANNEL=2" >> $GITHUB_ENV
        else
          echo "::error::channel: Bad input!"; exit 1
        fi

    - name: Get commit id
      shell: bash
      run: >
        curl -o directory.json https://update.flipperzero.one/firmware/directory.json;
        echo "COMMIT_ID=$(jq -r '.channels[0].versions[0].version' directory.json)" >> $GITHUB_ENV

    - name: Cache toolchain
      id: cache-fbt
      uses: actions/cache@v3
      env:
        cache-name: cache-ufbt
      with:
        path: ${{ runner.temp }}/flipperzero-ufbt/.ufbt/
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ inputs.channel }}-${{ env.COMMIT_ID }}
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-${{ inputs.channel }}-${{ env.COMMIT_ID }}

    - if: ${{ steps.cache-fbt.outputs.cache-hit != 'true' }}
      name: Update ufbt if cache not found
      shell: bash
      run: ufbt update --channel=${{ inputs.channel }}

    - name: Download problem_matcher.json
      shell: bash
      run: curl -o problem_matcher.json https://raw.githubusercontent.com/oleksiikutuzov/flipperzero-ufbt-action/main/problem_matcher.json

    - name: Execute ufbt
      shell: bash
      run: >
        if [ ${{ inputs.lint_only }} = 'false' ]; then
          echo "::add-matcher::$GITHUB_WORKSPACE/problem_matcher.json";
          cd ${{ env.FAP_PATH }}; ufbt;
          echo "ARTIFACT=$(basename ${{ env.FAP_PATH }}/dist/*.fap)" >> $GITHUB_ENV;
        elif [ ${{ inputs.lint_only }} = 'true' ]; then
          echo "::add-matcher::$GITHUB_WORKSPACE/problem_matcher.json";
          cd ${{ env.FAP_PATH }}; ufbt lint
        else
          echo "::error::lint_only: Bad input!"; exit 1
        fi;
        echo "::warning::The SDK structure is going to be updated soon (expectedly around 0.78 release)
        and new version of ufbt will no longer be compatible with older firmware versions.
        Thus, tag v1 of this action will no longer be updated. It's recommended to update
        your workflows to use tag v2 for the most actual version of ufbt"

    - if: ${{ inputs.lint_only == 'false' }}
      name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.ARTIFACT }}
        path: ${{ env.FAP_PATH }}/dist/${{ env.ARTIFACT }}
