name: "Build Flipper Application Package"
author: "Oleksii Kutuzov"
description: "Github Action that builds your fap with ufbt"
branding:
  icon: "cpu"
  color: "orange"
inputs:
  path:
    description: "Path to fap source code (if not in the root of repository)"
    required: false
    default: ""
  lint_only:
    description: "Whether you want to build or lint your source code"
    required: false
    default: "false"
  channel:
    description: "SDK channel to use"
    required: false
    default: "dev"
runs:
  using: "composite"
  steps:
    - if: ${{ inputs.path == '' }}
      name: Set fap path to workspace
      shell: bash
      run: echo "FAP_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

    - if: ${{ inputs.path != '' }}
      name: Set fap path to fap directory
      shell: bash
      run: echo "FAP_PATH=$GITHUB_WORKSPACE/${{ inputs.path }}" >> $GITHUB_ENV

    - name: Clone ufbt
      shell: bash
      run: git clone https://github.com/flipperdevices/flipperzero-ufbt ${{ runner.temp }}/flipperzero-ufbt

    - name: Set ufbt path
      shell: bash
      run: echo "${{ runner.temp }}/flipperzero-ufbt" >> $GITHUB_PATH

    - if: ${{ inputs.channel == 'dev' }}
      shell: bash
      run: echo "CHANNEL=0" >> $GITHUB_ENV

    - if: ${{ inputs.channel == 'rc' }}
      shell: bash
      run: echo "CHANNEL=1" >> $GITHUB_ENV

    - if: ${{ inputs.channel == 'release' }}
      shell: bash
      run: echo "CHANNEL=2" >> $GITHUB_ENV

    - name: Get directory.json
      shell: bash
      run: curl -o directory.json https://update.flipperzero.one/firmware/directory.json

    - name: Extract commit id
      shell: bash
      run: echo "COMMIT_ID=$(jq -r '.channels[0].versions[0].version' directory.json)" >> $GITHUB_ENV

    - name: Cache toolchain
      id: cache-fbt
      uses: actions/cache@v3
      env:
        cache-name: cache-ufbt
      with:
        path: ${{ runner.temp }}/flipperzero-ufbt/.ufbt/
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ inputs.channel }}-${{ env.COMMIT_ID }}
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-${{ inputs.channel }}-${{ env.COMMIT_ID }}

    - if: ${{ steps.cache-fbt.outputs.cache-hit != 'true' }}
      name: Update fbt
      shell: bash
      run: ufbt update --channel=${{ inputs.channel }}

    - if: ${{ inputs.lint_only == 'true' }}
      name: Lint fap
      shell: bash
      run: echo "::add-matcher::$GITHUB_WORKSPACE/problem_matcher.json"; cd ${{ env.FAP_PATH }}; ufbt lint

    - if: ${{ inputs.lint_only == 'false' }}
      name: Build Project
      shell: bash
      run: echo "::add-matcher::$GITHUB_WORKSPACE/problem_matcher.json"; cd ${{ env.FAP_PATH }}; ufbt

    - if: ${{ inputs.lint_only == 'false' }}
      name: Get name
      shell: bash
      run: echo "ARTIFACT=$(basename ${{ env.FAP_PATH }}/dist/*.fap)" >> $GITHUB_ENV

    - if: ${{ inputs.lint_only == 'false' }}
      name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.ARTIFACT }}
        path: ${{ env.FAP_PATH }}/dist/${{ env.ARTIFACT }}
